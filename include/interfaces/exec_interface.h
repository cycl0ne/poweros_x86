#ifndef exec_interface_h
#define exec_interface_h

#include "types.h"
#include "lists.h"
#include "tasks.h"
#include "ports.h"
#include "memory.h"
#include "interrupts.h"

/**
 * @file exec_interface_h
 *
 * The interface file to call the systems api
 */
/* PowerOS, Copyright (C) 2014.  All rights reserved. */

typedef struct SysBase * pSysBase;

#if 1

#define AddTask(a,b,c)				_LIBCALL(SysBase,  5, SysCall, (pSysBase, pTask, Task_Function, APTR ), (SysBase,a,b,c))
#define FindTask(a)		    		_LIBCALL(SysBase,  6, pTask, (pSysBase, STRPTR ), (SysBase,a))
#define CreateTask(a,b,c,d,e)		_LIBCALL(SysBase,  7, pTask, (pSysBase, STRPTR, Task_Function, APTR, UINT32, INT8), (SysBase,a,b,c,d,e))
#define SetTaskPri(a,b)				_LIBCALL(SysBase,  8, INT8, (pSysBase, pTask, INT8), (SysBase,a,b))
#define ReadyTask(a,b)				_LIBCALL(SysBase,  9, SysCall, (pSysBase, pTask, BOOL), (SysBase,a,b))
#define Permit()			    	_LIBCALL(SysBase, 10, SysCall, (pSysBase), (SysBase))
#define Forbid()			    	_LIBCALL(SysBase, 11, SysCall, (pSysBase), (SysBase))
#define AllocSignal(x)				_LIBCALL(SysBase, 12, INT8, (pSysBase, INT32), (SysBase,x))
#define FreeSignal(x)				_LIBCALL(SysBase, 13, INT8, (pSysBase, INT32), (SysBase,x))
#define WaitSignal(a)				_LIBCALL(SysBase, 14, Signal, (pSysBase, Signal), (SysBase,a))
#define SetSignal(a,b)				_LIBCALL(SysBase, 15, Signal, (pSysBase, Signal, Signal), (SysBase,a,b))
#define SignalTask(a,b)				_LIBCALL(SysBase, 16, SysCall, (pSysBase, pTask, Signal), (SysBase,a,b))
#define AddPort(a)	    			_LIBCALL(SysBase, 17, SysCall, (pSysBase, pMsgPort), (SysBase,a))
#define FindPort(a)	    			_LIBCALL(SysBase, 18, pMsgPort, (pSysBase, STRPTR), (SysBase,a))
#define RemPort(a)	    			_LIBCALL(SysBase, 19, SysCall, (pSysBase, pMsgPort), (SysBase,a))
#define WaitPort(a)	    			_LIBCALL(SysBase, 20, pMessage, (pSysBase, pMsgPort), (SysBase,a))
#define CreateMsgPort(a)			_LIBCALL(SysBase, 21, pMsgPort, (pSysBase, pMsgPort), (SysBase,a))
#define DeleteMsgPort(a)			_LIBCALL(SysBase, 22, SysCall, (pSysBase, pMsgPort), (SysBase,a))
#define GetMsg(a)	    			_LIBCALL(SysBase, 23, pMessage, (pSysBase, pMsgPort), (SysBase,a))
#define PutMsg(a,b)	    			_LIBCALL(SysBase, 24, SysCall, (pSysBase, pMsgPort, pMessage), (SysBase,a,b))
#define ReplyMsg(a)		    		_LIBCALL(SysBase, 25, SysCall, (pSysBase, pMessage), (SysBase,a))
#define AddHead(x,y)				_LIBCALL(SysBase, 26, void, (pSysBase, pList, pNode), (SysBase,x,y))
#define AddTail(x,y)				_LIBCALL(SysBase, 27, void, (pSysBase, pList, pNode), (SysBase,x,y))
#define Enqueue(x,y)				_LIBCALL(SysBase, 28, void, (pSysBase, pList, pNode), (SysBase,x,y))
#define Insert(x,y,z)				_LIBCALL(SysBase, 29, void, (pSysBase, pList, pNode, pNode), (SysBase,x,y,z))
#define NewList(x)		    		_LIBCALL(SysBase, 30, void, (pSysBase, pList), (SysBase,x))
#define NewListType(x,y)			_LIBCALL(SysBase, 31, void, (pSysBase, pList, UINT8), (SysBase,x,y))
#define Remove(x)		 			_LIBCALL(SysBase, 32, void, (pSysBase, pNode), (SysBase,x))
#define RemTail(x)	    			_LIBCALL(SysBase, 33, pNode, (pSysBase, pList), (SysBase,x))
#define RemHead(x)			    	_LIBCALL(SysBase, 34, pNode, (pSysBase, pList), (SysBase,x))
#define FindName(x,y)				_LIBCALL(SysBase, 35, pNode, (pSysBase, pList, STRPTR), (SysBase,x,y))
#define Allocate(x,y)				_LIBCALL(SysBase, 36, APTR, (pSysBase, pMemHeader, UINT32), (SysBase,x,y))
#define Deallocate(x,y)				_LIBCALL(SysBase, 37, void, (pSysBase, pMemHeader, APTR), (SysBase,x,y))
#define AddMemList(a,b,c,d,e)		_LIBCALL(SysBase, 38, void, (pSysBase, UINT32, UINT32, INT32, APTR, STRPTR), (SysBase,a,b,c,d,e))
#define AllocVec(x,y)				_LIBCALL(SysBase, 39, APTR, (pSysBase, UINT32, UINT32), (SysBase,x,y))
#define FreeVec(x)					_LIBCALL(SysBase, 40, void, (pSysBase, APTR), (SysBase,x))
#define AvailMem(x)     	    	_LIBCALL(SysBase, 41, UINT32, (pSysBase, UINT32), (SysBase,x))
#define CopyMemQuick(x, y, z)		_LIBCALL(SysBase, 42, APTR, (pSysBase, APTR, APTR, INT32), (SysBase,x, y, z))
#define CopyMem(x, y, z)	    	_LIBCALL(SysBase, 43, APTR, (pSysBase, APTR, APTR, INT32), (SysBase,x, y, z))
#define MemSet(x, y, z) 			_LIBCALL(SysBase, 44, APTR, (pSysBase, APTR, INT32, UINT32), (SysBase,x, y, z))
#define OpenLibrary(x,y)    		_LIBCALL(SysBase, 45, APTR, (pSysBase, STRPTR, UINT32), (SysBase,x,y))
#define CloseLibrary(x)		    	_LIBCALL(SysBase, 46, SysCall, (pSysBase, APTR), (SysBase,x))
#define AddLibrary(x)		    	_LIBCALL(SysBase, 47, SysCall, (pSysBase, struct Library *), (SysBase,x))
#define RemLibrary(x)	    		_LIBCALL(SysBase, 48, SysCall, (pSysBase, struct Library *), (SysBase,x))
#define SumLibrary(x)   			_LIBCALL(SysBase, 49, void, (pSysBase, struct Library *), (SysBase,x))
#define DisposeLibrary(x)   		_LIBCALL(SysBase, 50, SysCall, (pSysBase, struct Library *), (SysBase,x))
#define SetFunction(a,b,c)  		_LIBCALL(SysBase, 51, APTR, (pSysBase, pLibrary, INT32, APTR), (SysBase,a,b,c))
#define MakeLibrary(a,b,c,d,e)		_LIBCALL(SysBase, 52, pLibrary, (pSysBase, APTR , APTR, UINT32(*)(pLibrary, APTR, pSysBase),UINT32, UINT32), (SysBase,a,b,c,d,e))
#define MakeFunctions(x,y)		    _LIBCALL(SysBase, 53, SysCall, (pSysBase, APTR, APTR), (SysBase,x,y))
#define OpenDevice(x,y,z,a)		    _LIBCALL(SysBase, 54, SysCall, (pSysBase, STRPTR, UINT32, pIOStdReq, UINT32), (SysBase,x,y,z,a))
#define CloseDevice(x)			    _LIBCALL(SysBase, 55, SysCall, (pSysBase, pIOStdReq), (SysBase,x))
#define AddDevice(x)			    _LIBCALL(SysBase, 56, SysCall, (pSysBase, pDevice), (SysBase,x))
#define RemDevice(x)			    _LIBCALL(SysBase, 57, SysCall, (pSysBase, pDevice), (SysBase,x))
#define CreateIORequest(x,y)		_LIBCALL(SysBase, 58, pIOStdReq, (pSysBase, struct MsgPort*, UINT32), (SysBase,x,y))
#define DeleteIORequest(x)		    _LIBCALL(SysBase, 59, SysCall, (pSysBase, pIOStdReq), (SysBase,x))
#define DoIO(x)             	    _LIBCALL(SysBase, 60, SysCall, (pSysBase, pIOStdReq), (SysBase,x))
#define SendIO(x)	    		    _LIBCALL(SysBase, 61, SysCall, (pSysBase, pIOStdReq), (SysBase,x))
#define WaitIO(x)       			_LIBCALL(SysBase, 62, SysCall, (pSysBase, pIOStdReq), (SysBase,x))
#define CheckIO(x)					_LIBCALL(SysBase, 63, pIOStdReq, (pSysBase, pIOStdReq), (SysBase,x))
#define AbortIO(x)					_LIBCALL(SysBase, 64, SysCall, (pSysBase, pIOStdReq), (SysBase,x))
#define Enable()					_LIBCALL(SysBase, 65, VOID, (pSysBase), (SysBase))
#define Disable()					_LIBCALL(SysBase, 66, UINT32, (pSysBase), (SysBase))
#define Restore(a)					_LIBCALL(SysBase, 67, VOID, (pSysBase, UINT32), (SysBase,a))
#define AddIntServer(x,y)			_LIBCALL(SysBase, 68, void, (pSysBase, UINT32, pInterrupt), (SysBase,x,y))
#define RemIntServer(x,y)			_LIBCALL(SysBase, 69, void, (pSysBase, UINT32, pInterrupt), (SysBase,x,y))
#define SetExcVector(x,y)			_LIBCALL(SysBase, 70, pInterrupt, (pSysBase, UINT32, pInterrupt), (SysBase,x,y))
#define CreateIntServer(a,b,c,d)	_LIBCALL(SysBase, 71, pInterrupt, (pSysBase, const STRPTR, INT8, APTR, APTR), (SysBase,a,b,c,d))
#define InitResident(x,y)			_LIBCALL(SysBase, 72, APTR, (pSysBase, pResident, APTR), (SysBase,x,y))
#define InitResidentCode(x)			_LIBCALL(SysBase, 73, void, (pSysBase, UINT32), (SysBase,x))
#define RawIOInit()					_LIBCALL(SysBase, 74, void, (pSysBase), (SysBase))
#define RawPutChar(x)				_LIBCALL(SysBase, 75, void, (pSysBase, UINT8), (SysBase,x))
#define RawMayGetChar()				_LIBCALL(SysBase, 76, INT32, (pSysBase), (SysBase))
#define RawDoFmt(a,b,c,d)			_LIBCALL(SysBase, 77, va_list, (pSysBase, const char *, va_list, void (*PutCh)(INT32, APTR), APTR ), (SysBase,a,b,c,d))
#define InitSemaphore(x)			_LIBCALL(SysBase, 78, SysCall, (pSysBase, pSignalSemaphore), (SysBase,x))
#define AddSemaphore(x,y)			_LIBCALL(SysBase, 79, SysCall, (pSysBase, const char *, pSignalSemaphore *), (SysBase,x,y))
#define RemSemaphore(x)				_LIBCALL(SysBase, 80, SysCall, (pSysBase, pSignalSemaphore), (SysBase,x))
#define FindSemaphore(x)			_LIBCALL(SysBase, 81, pSignalSemaphore *, (pSysBase, const char *), (SysBase,x))
#define ObtainSemaphore(x)			_LIBCALL(SysBase, 82, SysCall, (pSysBase, pSignalSemaphore), (SysBase,x))
#define AttemptSemaphore(x)			_LIBCALL(SysBase, 83, BOOL, (pSysBase, pSignalSemaphore), (SysBase,x))
#define ReleaseSemaphore(x)			_LIBCALL(SysBase, 84, SysCall, (pSysBase, pSignalSemaphore), (SysBase,x))
#define ObtainSemaphoreShared(x)	_LIBCALL(SysBase, 85, SysCall, (pSysBase, pSignalSemaphore), (SysBase,x))
#define AttemptSemaphoreShared(x)	_LIBCALL(SysBase, 86, BOOL, (pSysBase, pSignalSemaphore), (SysBase,x))
#define Reschedule()				_LIBCALL(SysBase, 87, void, (pSysBase), (SysBase))
#define YieldCPU()					_LIBCALL(SysBase, 88, SysCall, (pSysBase), (SysBase))
#define KPrintF(x...)				_LIBCALL(SysBase, 89, void, (pSysBase, const char *,...), (SysBase,##x))
#define FindResident(a)				_LIBCALL(SysBase, 90, pResidentNode, (pSysBase, STRPTR), (SysBase,a))
#define CreatePool(a,b,c)			_LIBCALL(SysBase, 91, APTR, (pSysBase, UINT32, UINT32, UINT32), (SysBase,a,b,c))
#define DeletePool(a)				_LIBCALL(SysBase, 92, void, (pSysBase, pPool), (SysBase,a))
#define AllocPooled(a,b)			_LIBCALL(SysBase, 93, APTR, (pSysBase, pPool, UINT32), (SysBase,a,b))
#define FreePooled(a,b,c)			_LIBCALL(SysBase, 94, void, (pSysBase, pPool, APTR, UINT32), (SysBase,a,b,c))

#else

#define AddTask(a,b,c)     	(((SysCall(*)(pSysBase, pTask, Task_Function, APTR )) 		         	_GETVECADDR(SysBase,  5))(SysBase,a,b,c))
#define FindTask(a)     	(((pTask(*)(pSysBase, STRPTR ))             	_GETVECADDR(SysBase,  6))(SysBase,a))
#define CreateTask(a,b,c,d,e)	(((pTask(*)(pSysBase, STRPTR, Task_Function, APTR, UINT32, INT8))	_GETVECADDR(SysBase,  7))(SysBase,a,b,c,d,e))
#define SetTaskPri(a,b)    	(((INT8(*)(pSysBase, pTask, INT8))				_GETVECADDR(SysBase,  8))(SysBase,a,b))
#define ReadyTask(a,b)    	(((SysCall(*)(pSysBase, pTask, BOOL))          	_GETVECADDR(SysBase,  9))(SysBase,a,b))
#define Permit()			(((SysCall(*)(pSysBase))						_GETVECADDR(SysBase, 10))(SysBase))
#define Forbid()			(((SysCall(*)(pSysBase))						_GETVECADDR(SysBase, 11))(SysBase))

#define AllocSignal(x)		(((INT8(*)(pSysBase, INT32))					_GETVECADDR(SysBase, 12))(SysBase,x))
#define FreeSignal(x)		(((INT8(*)(pSysBase, INT32))					_GETVECADDR(SysBase, 13))(SysBase,x))
#define WaitSignal(a)     	(((Signal(*)(pSysBase, Signal))             	_GETVECADDR(SysBase, 14))(SysBase,a))
#define SetSignal(a,b)     	(((Signal(*)(pSysBase, Signal, Signal))			_GETVECADDR(SysBase, 15))(SysBase,a,b))
#define SignalTask(a,b) 	(((SysCall(*)(pSysBase, pTask, Signal))			_GETVECADDR(SysBase, 16))(SysBase,a,b))

#define AddPort(a) 			(((SysCall(*)(pSysBase, pMsgPort))				_GETVECADDR(SysBase, 17))(SysBase,a))
#define FindPort(a) 		(((pMsgPort(*)(pSysBase, STRPTR))				_GETVECADDR(SysBase, 18))(SysBase,a))
#define RemPort(a)			(((SysCall(*)(pSysBase, pMsgPort))				_GETVECADDR(SysBase, 19))(SysBase,a))
#define WaitPort(a)			(((pMessage(*)(pSysBase, pMsgPort))				_GETVECADDR(SysBase, 20))(SysBase,a))
#define CreateMsgPort(a)	(((pMsgPort(*)(pSysBase, pMsgPort))				_GETVECADDR(SysBase, 21))(SysBase,a))
#define DeleteMsgPort(a)	(((SysCall(*)(pSysBase, pMsgPort))				_GETVECADDR(SysBase, 22))(SysBase,a))
#define GetMsg(a)			(((pMessage(*)(pSysBase, pMsgPort))				_GETVECADDR(SysBase, 23))(SysBase,a))
#define PutMsg(a,b)			(((SysCall(*)(pSysBase, pMsgPort, pMessage))	_GETVECADDR(SysBase, 24))(SysBase,a,b))
#define ReplyMsg(a)			(((SysCall(*)(pSysBase, pMessage))				_GETVECADDR(SysBase, 25))(SysBase,a))

#define AddHead(x,y)		(((void(*)(pSysBase, pList, pNode))				_GETVECADDR(SysBase, 26))(SysBase,x,y))
#define AddTail(x,y)		(((void(*)(pSysBase, pList, pNode))				_GETVECADDR(SysBase, 27))(SysBase,x,y))
#define Enqueue(x,y)		(((void(*)(pSysBase, pList, pNode))				_GETVECADDR(SysBase, 28))(SysBase,x,y))
#define Insert(x,y,z)		(((void(*)(pSysBase, pList, pNode, pNode))		_GETVECADDR(SysBase, 29))(SysBase,x,y,z))
#define NewList(x)			(((void(*)(pSysBase, pList)) 					_GETVECADDR(SysBase, 30))(SysBase,x))
#define NewListType(x,y)	(((void(*)(pSysBase, pList, UINT8)) 			_GETVECADDR(SysBase, 31))(SysBase,x,y))
#define Remove(x)			(((void(*)(pSysBase, pNode))					_GETVECADDR(SysBase, 32))(SysBase,x))
#define RemTail(x)			(((pNode(*)(pSysBase, pList))					_GETVECADDR(SysBase, 33))(SysBase,x))
#define RemHead(x)			(((pNode(*)(pSysBase, pList))					_GETVECADDR(SysBase, 34))(SysBase,x))
#define FindName(x,y)		(((pNode(*)(pSysBase, pList, STRPTR))			_GETVECADDR(SysBase, 35))(SysBase,x,y))

#define Allocate(x,y)			(((APTR(*)(pSysBase, pMemHeader, UINT32))	_GETVECADDR(SysBase, 36))(SysBase,x,y))
#define Deallocate(x,y)			(((void(*)(pSysBase, pMemHeader, APTR))		_GETVECADDR(SysBase, 37))(SysBase,x,y))
#define AddMemList(a,b,c,d,e)	(((void(*)(pSysBase, UINT32, UINT32, INT32, APTR, STRPTR))	_GETVECADDR(SysBase, 38))(SysBase,a,b,c,d,e))
#define AllocVec(x,y)			(((APTR(*)(pSysBase, UINT32, UINT32))		_GETVECADDR(SysBase, 39))(SysBase,x,y))
#define FreeVec(x)				(((void(*)(pSysBase, APTR))					_GETVECADDR(SysBase, 40))(SysBase,x))
#define AvailMem(x)				(((UINT32(*)(pSysBase, UINT32))				_GETVECADDR(SysBase, 41))(SysBase,x))
#define CopyMemQuick(x, y, z)	(((APTR(*)(pSysBase, APTR, APTR, INT32))	_GETVECADDR(SysBase, 42))(SysBase,x, y, z))
#define CopyMem(x, y, z)		(((APTR(*)(pSysBase, APTR, APTR, INT32))	_GETVECADDR(SysBase, 43))(SysBase,x, y, z))

//#define MemSet(x, y, z)			(((APTR(*)(pSysBase, APTR, INT32, UINT32))	_GETVECADDR(SysBase, 44))(SysBase,x, y, z))
//#define MemSet(x...)			(((APTR(*)(pSysBase, APTR, INT32, UINT32))	_GETVECADDR(SysBase, 44))(SysBase,##x))
#define MemSet(x...)           _LIBCALL(SysBase, 44, APTR, (pSysBase, APTR, INT32, UINT32), ##x)
//#define MemSet(x,y,z) (*(((_MODCALL APTR (**) (pSysBase, APTR, INT32, UINT32))(SysBase))[-44]))(SysBase, x,y,z)


#define OpenLibrary(x,y)	(((APTR(*)(pSysBase, STRPTR, UINT32))			_GETVECADDR(SysBase, 45))(SysBase,x, y))
#define CloseLibrary(x)		(((SysCall(*)(pSysBase, APTR))					_GETVECADDR(SysBase, 46))(SysBase,x))
#define AddLibrary(x)		(((SysCall(*)(pSysBase, struct Library *))		_GETVECADDR(SysBase, 47))(SysBase,x))
#define RemLibrary(x)		(((SysCall(*)(pSysBase, struct Library *))		_GETVECADDR(SysBase, 48))(SysBase,x))
#define SumLibrary(x)		(((void(*)(pSysBase, struct Library *))			_GETVECADDR(SysBase, 49))(SysBase,x))
#define DisposeLibrary(x)	(((SysCall(*)(pSysBase, struct Library *))		_GETVECADDR(SysBase, 50))(SysBase,x))
#define SetFunction(a,b,c)	(((APTR(*)(pSysBase, pLibrary, INT32, APTR))	_GETVECADDR(SysBase, 51))(SysBase,a,b,c))
#define MakeLibrary(a,b,c,d,e)  (((pLibrary(*)(pSysBase, APTR , APTR, UINT32(*)(pLibrary, APTR, pSysBase),UINT32, UINT32)) _GETVECADDR(SysBase, 52))(SysBase,a,b,c,d,e))
#define MakeFunctions(x,y)	(((SysCall(*)(pSysBase, APTR, APTR))			_GETVECADDR(SysBase, 53))(SysBase,x, y))

#define OpenDevice(x,y,z,a)	(((SysCall(*)(pSysBase, STRPTR, UINT32, pIOStdReq, UINT32))	_GETVECADDR(SysBase, 54))(SysBase,x,y,z,a))
#define CloseDevice(x)		(((SysCall(*)(pSysBase, pIOStdReq))				_GETVECADDR(SysBase, 55))(SysBase,x))
#define AddDevice(x)		(((SysCall(*)(pSysBase, pDevice))				_GETVECADDR(SysBase, 56))(SysBase,x))
#define RemDevice(x)		(((SysCall(*)(pSysBase, pDevice))				_GETVECADDR(SysBase, 57))(SysBase,x))
#define CreateIORequest(x,y)	(((pIOStdReq(*)(pSysBase, struct MsgPort*, UINT32))	_GETVECADDR(SysBase, 58))(SysBase,x,y))
#define DeleteIORequest(x)	(((SysCall(*)(pSysBase, pIOStdReq))				_GETVECADDR(SysBase, 59))(SysBase,x))
#define DoIO(x)				(((SysCall(*)(pSysBase, pIOStdReq))				_GETVECADDR(SysBase, 60))(SysBase,x))
#define SendIO(x)			(((SysCall(*)(pSysBase, pIOStdReq))				_GETVECADDR(SysBase, 61))(SysBase,x))
#define WaitIO(x)			(((SysCall(*)(pSysBase, pIOStdReq))				_GETVECADDR(SysBase, 62))(SysBase,x))
#define CheckIO(x)			(((pIOStdReq(*)(pSysBase, pIOStdReq))			_GETVECADDR(SysBase, 63))(SysBase,x))
#define AbortIO(x)			(((SysCall(*)(pSysBase, pIOStdReq))				_GETVECADDR(SysBase, 64))(SysBase,x))

#define Enable()			(((VOID(*)(pSysBase))							_GETVECADDR(SysBase, 65))(SysBase))
#define Disable()			(((UINT32(*)(pSysBase)) 						_GETVECADDR(SysBase, 66))(SysBase))
#define Restore(a)			(((VOID(*)(pSysBase, UINT32))					_GETVECADDR(SysBase, 67))(SysBase, a))
#define AddIntServer(x,y)	(((void(*)(pSysBase, UINT32, pInterrupt))		_GETVECADDR(SysBase, 68))(SysBase,x, y))
#define RemIntServer(x,y)	(((void(*)(pSysBase, UINT32, pInterrupt))		_GETVECADDR(SysBase, 69))(SysBase,x, y))
#define SetExcVector(x,y)	(((pInterrupt(*)(pSysBase, UINT32, pInterrupt))	_GETVECADDR(SysBase, 70))(SysBase,x, y))
#define CreateIntServer(a,b,c,d)	(((pInterrupt(*)(pSysBase, const STRPTR, INT8, APTR, APTR))		_GETVECADDR(SysBase, 71))(SysBase,a,b,c,d))

#define InitResident(x,y)	(((APTR(*)(pSysBase, pResident, APTR))			_GETVECADDR(SysBase, 72))(SysBase,x, y))
#define InitResidentCode(x)	(((void(*)(pSysBase, UINT32))					_GETVECADDR(SysBase, 73))(SysBase,x))

#define RawIOInit()			(((void(*)(pSysBase))							_GETVECADDR(SysBase, 74))(SysBase))
#define RawPutChar(x)		(((void(*)(pSysBase, UINT8))					_GETVECADDR(SysBase, 75))(SysBase,x))
#define RawMayGetChar()		(((INT32(*)(pSysBase))							_GETVECADDR(SysBase, 76))(SysBase))
#define RawDoFmt(a,b,c,d)	(((va_list(*)(pSysBase, const char *, va_list, void (*PutCh)(INT32, APTR), APTR))	_GETVECADDR(SysBase, 77))(SysBase,a,b,c,d))

#define InitSemaphore(x)	(((SysCall(*)(pSysBase, pSignalSemaphore))			_GETVECADDR(SysBase, 78))(SysBase,x))
#define AddSemaphore(x,y)	(((SysCall(*)(pSysBase, const char *, pSignalSemaphore *))	_GETVECADDR(SysBase, 79))(SysBase,x,y))
#define RemSemaphore(x)		(((SysCall(*)(pSysBase, pSignalSemaphore))			_GETVECADDR(SysBase, 80))(SysBase,x))
#define FindSemaphore(x)	(((pSignalSemaphore *(*)(pSysBase, const char *))		_GETVECADDR(SysBase, 81))(SysBase,x))
#define ObtainSemaphore(x)	(((SysCall(*)(pSysBase, pSignalSemaphore))			_GETVECADDR(SysBase, 82))(SysBase,x))
#define AttemptSemaphore(x)	(((BOOL(*)(pSysBase, pSignalSemaphore))			_GETVECADDR(SysBase, 83))(SysBase,x))
#define ReleaseSemaphore(x)	(((SysCall(*)(pSysBase, pSignalSemaphore))			_GETVECADDR(SysBase, 84))(SysBase,x))
#define ObtainSemaphoreShared(x)	(((SysCall(*)(pSysBase, pSignalSemaphore))			_GETVECADDR(SysBase, 85))(SysBase,x))
#define AttemptSemaphoreShared(x)	(((BOOL(*)(pSysBase, pSignalSemaphore))			_GETVECADDR(SysBase, 86))(SysBase,x))

#define Reschedule()		(((void(*)(pSysBase))							_GETVECADDR(SysBase, 87))(SysBase))
#define YieldCPU()			(((SysCall(*)(pSysBase))						_GETVECADDR(SysBase, 88))(SysBase))

#define KPrintF(x...)		(((void(*)(pSysBase, const char *,...))				_GETVECADDR(SysBase, 89))(SysBase, ##x))
#define FindResident(a)		(((pResidentNode(*)(pSysBase, STRPTR))				_GETVECADDR(SysBase, 90))(SysBase, a))

#define CreatePool(a,b,c)	(((APTR(*)(pSysBase, UINT32, UINT32, UINT32))		_GETVECADDR(SysBase, 91))(SysBase, a,b,c))
#define DeletePool(a)		(((void(*)(pSysBase, pPool))						_GETVECADDR(SysBase, 92))(SysBase, a))
#define AllocPooled(a,b)	(((APTR(*)(pSysBase, pPool, UINT32))				_GETVECADDR(SysBase, 93))(SysBase, a,b))
#define FreePooled(a,b,c)	(((void(*)(pSysBase, pPool, APTR, UINT32))			_GETVECADDR(SysBase, 94))(SysBase, a,b,c))
#endif

#endif

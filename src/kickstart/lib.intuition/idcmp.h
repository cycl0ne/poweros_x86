#ifndef IDCMP_H
#define IDCMP_H

#include "types.h"
#include "screens.h"
#include "windows.h"

#define	IDCMP_TYPE_ERROR			(-1)
#define	IDCMP_TYPE_NONE					0
#define	IDCMP_TYPE_EXPOSURE				1
#define	IDCMP_TYPE_BUTTON_DOWN			2
#define	IDCMP_TYPE_BUTTON_UP			3
#define	IDCMP_TYPE_MOUSE_ENTER			4
#define	IDCMP_TYPE_MOUSE_EXIT			5
#define	IDCMP_TYPE_MOUSE_MOTION			6
#define	IDCMP_TYPE_MOUSE_POSITION		7
#define	IDCMP_TYPE_KEY_DOWN				8
#define	IDCMP_TYPE_KEY_UP				9
#define	IDCMP_TYPE_FOCUS_IN				10
#define	IDCMP_TYPE_FOCUS_OUT			11
#define IDCMP_TYPE_FDINPUT				12
#define IDCMP_TYPE_UPDATE				13
#define IDCMP_TYPE_CHLD_UPDATE			14
#define IDCMP_TYPE_CLOSE_REQ			15
#define IDCMP_TYPE_TIMEOUT				16
#define IDCMP_TYPE_SCREENSAVER			17
#define IDCMP_TYPE_CLIENT_DATA_REQ		18
#define IDCMP_TYPE_CLIENT_DATA			19
#define IDCMP_TYPE_SELECTION_CHANGED	20
#define IDCMP_TYPE_TIMER				21
#define IDCMP_TYPE_PORTRAIT_CHANGED		22
#define IDCMP_TYPE_RAWKEY				23
#define IDCMP_TYPE_VANILLAKEY			24
#define IDCMP_TYPE_IDCMPUPDATE			25

#define IDCMP_TYPE_EMPTYMSG				30
#define IDCMP_TYPE_ERRORBIT				31

/* Event masks */
typedef UINT32 	IDCMP_MASK;

#define	GR_EVENTMASK(n)					(((IDCMP_MASK) 1) << (n))

#define	IDCMP_MASK_NONE					GR_EVENTMASK(IDCMP_TYPE_NONE)
#define	IDCMP_MASK_ERROR				0x80000000L
#define	IDCMP_MASK_EXPOSURE				GR_EVENTMASK(IDCMP_TYPE_EXPOSURE)
#define	IDCMP_MASK_BUTTON_DOWN			GR_EVENTMASK(IDCMP_TYPE_BUTTON_DOWN)
#define	IDCMP_MASK_BUTTON_UP			GR_EVENTMASK(IDCMP_TYPE_BUTTON_UP)
#define	IDCMP_MASK_MOUSE_ENTER			GR_EVENTMASK(IDCMP_TYPE_MOUSE_ENTER)
#define	IDCMP_MASK_MOUSE_EXIT			GR_EVENTMASK(IDCMP_TYPE_MOUSE_EXIT)
#define	IDCMP_MASK_MOUSE_MOTION			GR_EVENTMASK(IDCMP_TYPE_MOUSE_MOTION)
#define	IDCMP_MASK_MOUSE_POSITION		GR_EVENTMASK(IDCMP_TYPE_MOUSE_POSITION)
#define	IDCMP_MASK_KEY_DOWN				GR_EVENTMASK(IDCMP_TYPE_KEY_DOWN)
#define	IDCMP_MASK_KEY_UP				GR_EVENTMASK(IDCMP_TYPE_KEY_UP)
#define	IDCMP_MASK_FOCUS_IN				GR_EVENTMASK(IDCMP_TYPE_FOCUS_IN)
#define	IDCMP_MASK_FOCUS_OUT			GR_EVENTMASK(IDCMP_TYPE_FOCUS_OUT)
#define	IDCMP_MASK_FDINPUT				GR_EVENTMASK(IDCMP_TYPE_FDINPUT)
#define	IDCMP_MASK_UPDATE				GR_EVENTMASK(IDCMP_TYPE_UPDATE)
#define	IDCMP_MASK_CHLD_UPDATE			GR_EVENTMASK(IDCMP_TYPE_CHLD_UPDATE)
#define	IDCMP_MASK_CLOSE_REQ			GR_EVENTMASK(IDCMP_TYPE_CLOSE_REQ)
#define	IDCMP_MASK_TIMEOUT				GR_EVENTMASK(IDCMP_TYPE_TIMEOUT)
#define IDCMP_MASK_SCREENSAVER			GR_EVENTMASK(IDCMP_TYPE_SCREENSAVER)
#define IDCMP_MASK_CLIENT_DATA_REQ		GR_EVENTMASK(IDCMP_TYPE_CLIENT_DATA_REQ)
#define IDCMP_MASK_CLIENT_DATA			GR_EVENTMASK(IDCMP_TYPE_CLIENT_DATA)
#define IDCMP_MASK_SELECTION_CHANGED	GR_EVENTMASK(IDCMP_TYPE_SELECTION_CHANGED)
#define IDCMP_MASK_TIMER				GR_EVENTMASK(IDCMP_TYPE_TIMER)
#define IDCMP_MASK_PORTRAIT_CHANGED		GR_EVENTMASK(IDCMP_TYPE_PORTRAIT_CHANGED)
#define IDCMP_MASK_RAWKEY				GR_EVENTMASK(IDCMP_TYPE_RAWKEY)
#define IDCMP_MASK_VANILLAKEY			GR_EVENTMASK(IDCMP_TYPE_VANILLAKEY)
#define IDCMP_MASK_IDCMPUPDATE			GR_EVENTMASK(IDCMP_TYPE_IDCMPUPDATE)

#define IDCMP_MASK_EMPTYMSG				GR_EVENTMASK(IDCMP_TYPE_EMPTYMSG)


#define	IDCMP_MASK_ALL		((IDCMP_MASK) -1L)

/* update event types */
#define GR_UPDATE_MAP		1
#define GR_UPDATE_UNMAP		2
#define GR_UPDATE_MOVE		3
#define GR_UPDATE_SIZE		4
#define GR_UPDATE_UNMAPTEMP	5	/* unmap during window move/resize*/
#define GR_UPDATE_ACTIVATE	6	/* toplevel window [de]activate*/
#define GR_UPDATE_DESTROY	7
#define GR_UPDATE_REPARENT	8

typedef struct IDCMPMessage
{
	struct Message	ExecMessage;
	struct nWindow	*IDCMPWindow;
	UINT32			Class;
	UINT16			Code;
	UINT16			Qualifier;
	INT16			MouseX, MouseY;
	UINT32			Seconds, Micros;
	APTR			iAddress;
} IDCMPMsg, *pIDCMPMessage;


struct IntuiMessage 
{
    struct Message ExecMessage;
    UINT32	Class;
    UINT16	Code;
    UINT16	Qualifier;

    APTR IAddress;
	INT32 MouseX, MouseY; // INT16 ?
    UINT32 Seconds, Micros;

    struct nWindow *IDCMPWindow;
    struct IntuiMessage *SpecialLink;
};

#endif
